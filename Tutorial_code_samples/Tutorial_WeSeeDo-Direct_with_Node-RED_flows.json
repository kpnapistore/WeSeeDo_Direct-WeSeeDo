[{"id":"4e7052a1.c1757c","type":"tab","label":"WeeSeeDo: All requests","disabled":false,"info":""},{"id":"3497461.e020aba","type":"group","z":"4e7052a1.c1757c","name":"Delete user","style":{"label":true,"color":"#000000","stroke":"#bfdbef","fill":"#bfdbef"},"nodes":["2ae3fbd0.132f64","991a0b0c.7ac1c8","ee8e0d7.f2944f","4f8b9727.c120c8"],"x":574,"y":1133,"w":870,"h":88,"info":"1. Double-click the node `User ID`.\n2. Enter the ID of the user you want to delete. \n3. Click `Done.`\n4. Click on the `Trigger request` button to send the request."},{"id":"3bcf5104.61b80e","type":"group","z":"4e7052a1.c1757c","name":"Send meeting invitation ","style":{"label":true,"color":"#000000","stroke":"#bfdbef","fill":"#bfdbef"},"nodes":["af419c48.5e646","1ee4a1f0.7831be","72018b70.a486b4","654b3607.207f58"],"x":574,"y":1591,"w":922,"h":88,"info":"1. Double-click the node `Set request body`\n2. Open the json and enter the `id` of the participant and the `hash` from the response of the `Create meeting` request.\n```\n{\n    \"participant\": \"THE_ID_OF_THE_PARTICIPANT\",\n    \"body\": \"WeSeeDo TEST: https://sandbox-direct.weseedo.nl/client.html?id=A_HASHED_TOKEN_FOR_THE_PARTICIPANT\"\n}\n```\n3. Click `Done`.\n4. Click on the `Trigger request` button to send the request."},{"id":"3e9fe612.b085ba","type":"group","z":"4e7052a1.c1757c","name":"Create meeting","style":{"label":true,"color":"#000000","stroke":"#bfdbef","fill":"#bfdbef"},"nodes":["f29dee1.90b6d1","420f76f6.2ea3d8","a7b48140.89fe1","885853e.63b20b"],"x":574,"y":1352,"w":920,"h":88,"info":"1. Double-click the node `Set request body`\n2. Open the json and enter the telephone number of the participant. Dutch formats `0612345678` and`12345678` are automatically converted to their international format `+31612345678`.\n```\n{\n    \"participant\": \"0612345678\"\n}\n```\n3. Click `Done`.\n4. Click on the `Trigger request` button to send the request.\n5. Go to the Debug message `Create user result` and open the following:\n - `object`\n - `payload`\n - `result`\n - `participants`\n - `1: object`\n6. Save the `id` of the participant (visitor) and the `hash` for the `Send meeting invitation to participant request`.\n\n**Example**\n```\n\"participants\": [\n    {\n      \"username\": \"visitor.aSpde07KI7sIHfsD\",\n      \"name\": \"0612345678\",\n      \"id\": \"THE_ID_OF_THE_PARTICIPANT\",\n      \"hash\": \"A_HASHED_TOKEN_FOR_THE_PARTICIPANT\"\n    }\n        \n```"},{"id":"4e095c2d.4a9d24","type":"group","z":"4e7052a1.c1757c","name":"Obtain access token","style":{"label":true,"color":"#000000","fill":"#e3f3d3","stroke":"#e3f3d3"},"nodes":["88cd5da7.48057","5a8f16f4.ee4e28","12a0ff9.a1843"],"x":250,"y":34,"w":272,"h":202,"info":"1. Go to KPN API Store and copy your credentials.\n2. Double-click the node `Set credentials`.\n2. Enter your KPN API Storecredentials.\n3. Click `Done`"},{"id":"866a6377.f3757","type":"group","z":"4e7052a1.c1757c","name":"Update user","style":{"label":true,"color":"#000000","stroke":"#bfdbef","fill":"#bfdbef"},"nodes":["f00d6116.79a94","7bd2517a.1dc18","ea9a95c4.ff9118","b4232e0f.59e98","43a91081.5dab1"],"x":574,"y":918,"w":1072,"h":89,"info":"1. Double-click the node `Set request body`\n2. Open the json and enter the details of the user.\n```\n{\n    \"first_name\": \"Updated first name\",\n    \"last_name\": \"Updated family name\",\n    \"password\": \"Updated.user.1234\",\n    \"role\": \"CFO\",\n    \"email\": \"new.user@email.com\",\n    \"locale\": \"nl\",\n    \"company\": \"TestUser Ltd\"\n}\n```\n3. Double-click `Done`\n4. Double-click the node `User ID`.\n5. Enter the ID of the user you want to update.\n6. Click `Done.`\n7. Click on the `Trigger request` button to send the request.\n"},{"id":"b31609bc.abd758","type":"group","z":"4e7052a1.c1757c","name":"Create user","style":{"label":true,"color":"#000000","stroke":"#bfdbef","fill":"#bfdbef"},"nodes":["da69264f.11b158","34405d65.1d96d2","16404fdc.85ffb","5c01d391.67c60c"],"x":574,"y":717,"w":922,"h":88,"info":"1. Double-click the node `Set request body`\n2. Open the json and enter the details of the new user.\n```\n{\n    \"first_name\": \"New user first name\",\n    \"last_name\": \"New user family name\",\n    \"password\": \"new.user.1234\",\n    \"role\": \"CFO\",\n    \"email\": \"new.user@email.com\",\n    \"locale\": \"nl\",\n    \"company\": \"TestUser Ltd\"\n}\n```\n3. Click `Done`\n4. Click on the `Trigger request` button to send the request."},{"id":"da73ef1.2267c1","type":"group","z":"4e7052a1.c1757c","name":"Retrieve list of users","style":{"label":true,"color":"#000000","stroke":"#bfdbef","fill":"#bfdbef"},"nodes":["fd74a143.d62cb","2389a9a3.6f3466","fb42e8a.7f0bd18"],"x":574,"y":530,"w":711,"h":89,"info":"1. Click on the `Trigger request` button to send the request."},{"id":"eb532adc.f5abc8","type":"group","z":"4e7052a1.c1757c","name":"Retrieve individual user","style":{"label":true,"color":"#000000","stroke":"#bfdbef","fill":"#bfdbef"},"nodes":["5fe93ac5.080754","1f155aff.cd0ed5","f6e054d3.88ea18","2509e6a.397e21a"],"x":574,"y":317,"w":862,"h":89,"info":"1. Double-click the node `User ID`.\n2. Enter the ID of the user you want to retrieve. \n3. Click `Done.`\n4. Click on the `Trigger request` button to send the request."},{"id":"da69264f.11b158","type":"switch","z":"4e7052a1.c1757c","g":"b31609bc.abd758","name":"If access token received","property":"statusCode","propertyType":"msg","rules":[{"t":"eq","v":"200","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":710,"y":764,"wires":[["16404fdc.85ffb"],[]],"inputLabels":["httpResult"],"outputLabels":["noToken","tokenReceived"]},{"id":"5c01d391.67c60c","type":"http request","z":"4e7052a1.c1757c","g":"b31609bc.abd758","name":"Create user request","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":1380,"y":758,"wires":[["cfce4f4f.501cd"]]},{"id":"34405d65.1d96d2","type":"function","z":"4e7052a1.c1757c","g":"b31609bc.abd758","name":"Prepare request","func":"/*\nUse Access (Bearer) token to authenticate API call.\nIn this example, we will use the \"/sms-kpn/v1/send\" API\n\nNote: The Access token gets retrieved from the \nauthorization request: `msg.payload.access_token`\n*/\n\nvar baseURL = \"https://api-prd.kpn.com/communication/weseedo/weseedodirect/api\";\nvar apiEndpoint = \"/users\";\n\nmsg.method = \"POST\";\nmsg.url = baseURL + apiEndpoint;\nmsg.headers = {};\nmsg.headers.Authorization = \"Bearer \" + msg.payload.access_token;\nmsg.headers[\"Content-Type\"] = \"application/json\";\n//msg.payload = null;\nmsg.payload = msg.json;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1160,"y":758,"wires":[["5c01d391.67c60c","747d1ba0.ef0684"]],"info":"Use Bearer token from previous request in the headers to authenticate API request.\n\nNote: The bearer token gets retrieved from the payload of the previous authorization request: `msg.payload.access_token`\n"},{"id":"cfce4f4f.501cd","type":"debug","z":"4e7052a1.c1757c","name":"Create user request result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1650,"y":758,"wires":[]},{"id":"16404fdc.85ffb","type":"change","z":"4e7052a1.c1757c","g":"b31609bc.abd758","name":"Set request body","rules":[{"t":"set","p":"json","pt":"msg","to":"{\"first_name\":\"New user first name\",\"last_name\":\"New user family name\",\"password\":\"new.user.1234\",\"role\":\"CFO\",\"email\":\"new.user@email.com\",\"locale\":\"nl\",\"company\":\"TestUser Ltd\"}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":950,"y":758,"wires":[["34405d65.1d96d2"]],"info":"1. Double-click `Set request body`\n2. Open the json and enter the details of the new user.\n```\n{\n    \"first_name\": \"New user first name\",\n    \"last_name\": \"New user family name\",\n    \"password\": \"new.user.1234\",\n    \"role\": \"CFO\",\n    \"email\": \"new.user@email.com\",\n    \"locale\": \"nl\",\n    \"company\": \"TestUser Ltd\"\n}\n```\n3. click `Done`"},{"id":"2bc65b7.61575a4","type":"comment","z":"4e7052a1.c1757c","name":"Set request body","info":"1. Double-click the node `Set request body`\n2. Open the json and enter the details of the new user.\n```\n{\n    \"first_name\": \"New user first name\",\n    \"last_name\": \"New user family name\",\n    \"password\": \"new.user.1234\",\n    \"role\": \"CFO\",\n    \"email\": \"new.user@email.com\",\n    \"locale\": \"nl\",\n    \"company\": \"TestUser Ltd\"\n}\n```\n3. Click `Done`\n4. Click on the `Trigger request` button to send the request.","x":941,"y":698,"wires":[]},{"id":"dcfa4190.2fc8c","type":"comment","z":"4e7052a1.c1757c","name":"Set API Store credentials","info":"1. Go to KPN API Store and copy your credentials.\n2. Double-click the node `Set API Store credentials`.\n2. Enter your KPN API Store credentials.\n3. Click `Done`","x":651,"y":78,"wires":[]},{"id":"21816800.6cd828","type":"inject","z":"4e7052a1.c1757c","name":"Trigger request","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":141,"y":75,"wires":[["12a0ff9.a1843"]]},{"id":"12a0ff9.a1843","type":"credentials","z":"4e7052a1.c1757c","g":"4e095c2d.4a9d24","name":"Set API Store credentials","props":[{"value":"client_id","type":"msg"},{"value":"client_secret","type":"msg"}],"x":386,"y":75,"wires":[["5a8f16f4.ee4e28"]]},{"id":"5a8f16f4.ee4e28","type":"function","z":"4e7052a1.c1757c","g":"4e095c2d.4a9d24","name":"Prepare request","func":"/*\nTo use KPN APIs, an access token (also called bearer) token must first be obtained.\nThe bearer token is obtained by invoking an Authorization API (`loginAPI`) using a POST method.\nThe API payload is an object with the client credentials:\n\nclient_id\nclient_secret\n\nIf correct, the API returns a payload object that will contain a valid access token authentication in subsequest API requests.\n*/\n\n// set `loginAPI` API here:\n\nvar loginAPI = \"https://api-prd.kpn.com/oauth/client_credential/accesstoken?grant_type=client_credentials\";\n\nmsg.method = \"POST\";\nmsg.url = loginAPI;\nmsg.headers = {};\nmsg.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\n// Use your `client_id` and `client_secret` from KPN API Store.\nmsg.payload = 'client_id=' + msg.client_id + '&client_secret=' + msg.client_secret;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":356,"y":135,"wires":[["88cd5da7.48057"]],"info":"To use KPN APIs, an access token (also called bearer) token must first be obtained.\n\nThe bearer token is obtained by invoking an Authorization API (`loginAPI`) using a POST method.\n\nThe API payload is an object with the `client credentials`:\n* `client_id`\n* `client_secret`\n\n\nUse your `client_id` and `client_secret` from KPN API Store.\n\nIf correct, the API returns a payload object that will contain a valid access token authentication in subsequest API requests."},{"id":"88cd5da7.48057","type":"http request","z":"4e7052a1.c1757c","g":"4e095c2d.4a9d24","name":"Access token request","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":376,"y":195,"wires":[["f3f4da43.79fb48","2509e6a.397e21a"]]},{"id":"f3f4da43.79fb48","type":"debug","z":"4e7052a1.c1757c","name":"Token request result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":681,"y":195,"wires":[]},{"id":"f00d6116.79a94","type":"switch","z":"4e7052a1.c1757c","g":"866a6377.f3757","name":"If access token received","property":"statusCode","propertyType":"msg","rules":[{"t":"eq","v":"200","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":710,"y":966,"wires":[["7bd2517a.1dc18"],[]],"inputLabels":["httpResult"],"outputLabels":["noToken","tokenReceived"]},{"id":"43a91081.5dab1","type":"http request","z":"4e7052a1.c1757c","g":"866a6377.f3757","name":"Create user request","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":1530,"y":959,"wires":[["733dd509.fbe2fc"]]},{"id":"b4232e0f.59e98","type":"function","z":"4e7052a1.c1757c","g":"866a6377.f3757","name":"Prepare request","func":"/*\nUse Access (Bearer) token to authenticate API call.\nIn this example, we will use the \"/sms-kpn/v1/send\" API\n\nNote: The Access token gets retrieved from the \nauthorization request: `msg.payload.access_token`\n\nAdd `user_email` as header in order to send the SMS.\n*/\n\nvar baseURL = \"https://api-prd.kpn.com/communication/weseedo/weseedodirect/api\";\nvar apiEndpoint = \"/users/\";\n\nmsg.method = \"PUT\";\nmsg.url = baseURL + apiEndpoint + msg.user_id;\nmsg.headers = {};\nmsg.headers.Authorization = \"Bearer \" + msg.payload.access_token;\nmsg.headers[\"Content-Type\"] = \"application/json\";\n//msg.payload = null;\nmsg.payload = msg.json;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1320,"y":959,"wires":[["43a91081.5dab1","e521334c.3e03e"]],"info":"Use Bearer token from previous request in the headers to authenticate API request.\n\nNote: The bearer token gets retrieved from the payload of the previous authorization request: `msg.payload.access_token`\n"},{"id":"733dd509.fbe2fc","type":"debug","z":"4e7052a1.c1757c","name":"Create user request result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1810,"y":958,"wires":[]},{"id":"7bd2517a.1dc18","type":"change","z":"4e7052a1.c1757c","g":"866a6377.f3757","name":"Set request body","rules":[{"t":"set","p":"json","pt":"msg","to":"{\"first_name\":\"D\",\"last_name\":\"C\",\"locale\":\"nl\"}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":950,"y":959,"wires":[["ea9a95c4.ff9118"]]},{"id":"ea9a95c4.ff9118","type":"credentials","z":"4e7052a1.c1757c","g":"866a6377.f3757","name":"User ID","props":[{"value":"user_id","type":"msg"}],"x":1140,"y":959,"wires":[["b4232e0f.59e98"]]},{"id":"fd74a143.d62cb","type":"switch","z":"4e7052a1.c1757c","g":"da73ef1.2267c1","name":"If access token received","property":"statusCode","propertyType":"msg","rules":[{"t":"eq","v":"200","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":710,"y":578,"wires":[["2389a9a3.6f3466"],[]],"inputLabels":["httpResult"],"outputLabels":["noToken","tokenReceived"]},{"id":"fb42e8a.7f0bd18","type":"http request","z":"4e7052a1.c1757c","g":"da73ef1.2267c1","name":"Create user request","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":1169,"y":571,"wires":[["aee944e.9b1c4b8"]]},{"id":"2389a9a3.6f3466","type":"function","z":"4e7052a1.c1757c","g":"da73ef1.2267c1","name":"Prepare request","func":"/*\nUse Access (Bearer) token to authenticate API call.\nIn this example, we will use the \"/sms-kpn/v1/send\" API\n\nNote: The Access token gets retrieved from the \nauthorization request: `msg.payload.access_token`\n\nFor WeSeeDo:\nAdd the header `company_email`\n*/\n\nvar baseURL = \"https://api-prd.kpn.com/communication/weseedo/weseedodirect/api\";\nvar apiEndpoint = \"/users\";\n\nmsg.method = \"GET\";\nmsg.url = baseURL + apiEndpoint;\nmsg.headers = {};\nmsg.headers.Authorization = \"Bearer \" + msg.payload.access_token;\nmsg.headers[\"Content-Type\"] = \"application/json\";\n//msg.payload = null;\nmsg.payload = msg.json;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":949,"y":571,"wires":[["fb42e8a.7f0bd18","464487ae.eb8b58"]],"info":"Use Bearer token from previous request in the headers to authenticate API request.\n\nNote: The bearer token gets retrieved from the payload of the previous authorization request: `msg.payload.access_token`\n"},{"id":"aee944e.9b1c4b8","type":"debug","z":"4e7052a1.c1757c","name":"Create user request result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1519,"y":571,"wires":[]},{"id":"2509e6a.397e21a","type":"switch","z":"4e7052a1.c1757c","g":"eb532adc.f5abc8","name":"If access token received","property":"statusCode","propertyType":"msg","rules":[{"t":"eq","v":"200","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":710,"y":365,"wires":[["f6e054d3.88ea18"],["3f8a4204.b2e0ae"]],"inputLabels":["httpResult"],"outputLabels":["noToken","tokenReceived"]},{"id":"3f8a4204.b2e0ae","type":"debug","z":"4e7052a1.c1757c","name":"No token","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":920,"y":438,"wires":[]},{"id":"5fe93ac5.080754","type":"http request","z":"4e7052a1.c1757c","g":"eb532adc.f5abc8","name":"Create user request","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":1320,"y":358,"wires":[["8af49194.86af1"]]},{"id":"1f155aff.cd0ed5","type":"function","z":"4e7052a1.c1757c","g":"eb532adc.f5abc8","name":"Prepare request","func":"/*\nUse Access (Bearer) token to authenticate API call.\nIn this example, we will use the \"/sms-kpn/v1/send\" API\n\nNote: The Access token gets retrieved from the \nauthorization request: `msg.payload.access_token`\n\nAdd `user_email` as header in order to send the SMS.\n*/\n\nvar baseURL = \"https://api-prd.kpn.com/communication/weseedo/weseedodirect/api\";\nvar apiEndpoint = \"/users/\";\n\nmsg.method = \"GET\";\nmsg.url = baseURL + apiEndpoint + msg.user_id;\nmsg.headers = {};\nmsg.headers.Authorization = \"Bearer \" + msg.payload.access_token;\nmsg.headers[\"Content-Type\"] = \"application/json\";\n//msg.payload = null;\nmsg.payload = msg.json;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1100,"y":358,"wires":[["5fe93ac5.080754","a4c33e62.a0bc7"]],"info":"Use Bearer token from previous request in the headers to authenticate API request.\n\nNote: The bearer token gets retrieved from the payload of the previous authorization request: `msg.payload.access_token`\n"},{"id":"8af49194.86af1","type":"debug","z":"4e7052a1.c1757c","name":"Create user request result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1590,"y":358,"wires":[]},{"id":"a4c33e62.a0bc7","type":"debug","z":"4e7052a1.c1757c","name":"Prepare request result","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1320,"y":438,"wires":[]},{"id":"3b9cc02c.1b551","type":"comment","z":"4e7052a1.c1757c","name":"User ID","info":"1. Double-click the node `User ID`.\n2. Enter the ID of the user you want to retrieve. \n3. Click `Done.`\n4. Click on the `Trigger request` button to send the request.","x":911,"y":298,"wires":[]},{"id":"f6e054d3.88ea18","type":"credentials","z":"4e7052a1.c1757c","g":"eb532adc.f5abc8","name":"User ID","props":[{"value":"user_id","type":"msg"}],"x":920,"y":358,"wires":[["1f155aff.cd0ed5"]]},{"id":"2ae3fbd0.132f64","type":"switch","z":"4e7052a1.c1757c","g":"3497461.e020aba","name":"If access token received","property":"statusCode","propertyType":"msg","rules":[{"t":"eq","v":"200","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":710,"y":1180,"wires":[["991a0b0c.7ac1c8"],[]],"inputLabels":["httpResult"],"outputLabels":["noToken","tokenReceived"]},{"id":"4f8b9727.c120c8","type":"http request","z":"4e7052a1.c1757c","g":"3497461.e020aba","name":"Create user request","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":1328,"y":1175,"wires":[["f96ff370.1fd87"]]},{"id":"ee8e0d7.f2944f","type":"function","z":"4e7052a1.c1757c","g":"3497461.e020aba","name":"Prepare request","func":"/*\nUse Access (Bearer) token to authenticate API call.\nIn this example, we will use the \"/sms-kpn/v1/send\" API\n\nNote: The Access token gets retrieved from the \nauthorization request: `msg.payload.access_token`\n\nAdd `user_email` as header in order to send the SMS.\n*/\n\nvar baseURL = \"https://api-prd.kpn.com/communication/weseedo/weseedodirect/api\";\nvar apiEndpoint = \"/users/\";\n\nmsg.method = \"GET\";\nmsg.url = baseURL + apiEndpoint + msg.user_id;\nmsg.headers = {};\nmsg.headers.Authorization = \"Bearer \" + msg.payload.access_token;\nmsg.headers[\"Content-Type\"] = \"application/json\";\n//msg.payload = null;\nmsg.payload = msg.json;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1106,"y":1174,"wires":[["4f8b9727.c120c8","416dbb28.7ee244"]],"info":"Use Bearer token from previous request in the headers to authenticate API request.\n\nNote: The bearer token gets retrieved from the payload of the previous authorization request: `msg.payload.access_token`\n"},{"id":"f96ff370.1fd87","type":"debug","z":"4e7052a1.c1757c","name":"Create user request result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1770,"y":1172,"wires":[]},{"id":"991a0b0c.7ac1c8","type":"credentials","z":"4e7052a1.c1757c","g":"3497461.e020aba","name":"User ID","props":[{"value":"user_id","type":"msg"}],"x":920,"y":1174,"wires":[["ee8e0d7.f2944f"]]},{"id":"f29dee1.90b6d1","type":"switch","z":"4e7052a1.c1757c","g":"3e9fe612.b085ba","name":"If access token received","property":"statusCode","propertyType":"msg","rules":[{"t":"eq","v":"200","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":710,"y":1399,"wires":[["420f76f6.2ea3d8"],[]],"inputLabels":["httpResult"],"outputLabels":["noToken","tokenReceived"]},{"id":"885853e.63b20b","type":"http request","z":"4e7052a1.c1757c","g":"3e9fe612.b085ba","name":"Create user request","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":1378,"y":1393,"wires":[["9f03b260.c6bfa"]]},{"id":"a7b48140.89fe1","type":"function","z":"4e7052a1.c1757c","g":"3e9fe612.b085ba","name":"Prepare request","func":"/*\nUse Access (Bearer) token to authenticate API call.\nIn this example, we will use the \"/sms-kpn/v1/send\" API\n\nNote: The Access token gets retrieved from the \nauthorization request: `msg.payload.access_token`\n*/\n\nvar baseURL = \"https://api-prd.kpn.com/communication/weseedo/weseedodirect/api\";\nvar apiEndpoint = \"/meeting\";\n\nmsg.method = \"POST\";\nmsg.url = baseURL + apiEndpoint;\nmsg.headers = {};\nmsg.headers.Authorization = \"Bearer \" + msg.payload.access_token;\nmsg.headers[\"Content-Type\"] = \"application/json\";\nmsg.headers[\"user_email\"] = \"test.user@email.com\";\n//msg.payload = null;\nmsg.payload = msg.json;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1160,"y":1393,"wires":[["885853e.63b20b","25d3b6a.ea9b84a"]],"info":"Use Bearer token from previous request in the headers to authenticate API request.\n\nNote: The bearer token gets retrieved from the payload of the previous authorization request: `msg.payload.access_token`\n"},{"id":"9f03b260.c6bfa","type":"debug","z":"4e7052a1.c1757c","name":"Create user request result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1770,"y":1392,"wires":[]},{"id":"420f76f6.2ea3d8","type":"change","z":"4e7052a1.c1757c","g":"3e9fe612.b085ba","name":"Set request body","rules":[{"t":"set","p":"json","pt":"msg","to":"{\"participant\":\"0612345678\"}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":950,"y":1393,"wires":[["a7b48140.89fe1"]]},{"id":"c9487c28.c063d","type":"comment","z":"4e7052a1.c1757c","name":"Set request body","info":"1. Double-click the node `Set request body`\n2. Open the json and enter the telephone number of the participant. Dutch formats `0612345678` and`12345678` are automatically converted to their international format `+31612345678`.\n```\n{\n    \"participant\": \"0612345678\"\n}\n```\n3. Click `Done`.\n4. Click on the `Trigger request` button to send the request.\n5. Go to the Debug message `Create user result` and open the following:\n - `object`\n - `payload`\n - `result`\n - `participants`\n - `1: object`\n6. Save the `id` of the participant (visitor) and the `hash` for the `Send meeting invitation to participant request`.\n\n**Example**\n```\n\"participants\": [\n    {\n      \"username\": \"visitor.aSpde07KI7sIHfsD\",\n      \"name\": \"0612345678\",\n      \"id\": \"THE_ID_OF_THE_PARTICIPANT\",\n      \"hash\": \"A_HASHED_TOKEN_FOR_THE_PARTICIPANT\"\n    }\n        \n```\n","x":941,"y":1330,"wires":[]},{"id":"af419c48.5e646","type":"switch","z":"4e7052a1.c1757c","g":"3bcf5104.61b80e","name":"If access token received","property":"statusCode","propertyType":"msg","rules":[{"t":"eq","v":"200","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":710,"y":1638,"wires":[["1ee4a1f0.7831be"],[]],"inputLabels":["httpResult"],"outputLabels":["noToken","tokenReceived"]},{"id":"654b3607.207f58","type":"http request","z":"4e7052a1.c1757c","g":"3bcf5104.61b80e","name":"Create user request","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":1380,"y":1632,"wires":[["9b2ed519.2d98c8"]]},{"id":"72018b70.a486b4","type":"function","z":"4e7052a1.c1757c","g":"3bcf5104.61b80e","name":"Prepare request","func":"/*\nUse Access (Bearer) token to authenticate API call.\nIn this example, we will use the \"/sms-kpn/v1/send\" API\n\nNote: The Access token gets retrieved from the \nauthorization request: `msg.payload.access_token`\n\nJSON in Set Request:\nUse the `id` of the participant that was returned when creating the meeting.\n\n\n'participant': Add `user_email` as header in order to send the SMS.\n'body': Use the `hash` of the participant that was returned when creating the meeting in the secure URL.\n\n*/\n\nvar baseURL = \"https://api-prd.kpn.com/communication/weseedo/weseedodirect/api\";\nvar apiEndpoint = \"/sms\";\n\nmsg.method = \"POST\";\nmsg.url = baseURL + apiEndpoint;\nmsg.headers = {};\nmsg.headers.Authorization = \"Bearer \" + msg.payload.access_token;\nmsg.headers[\"Content-Type\"] = \"application/json\";\nmsg.headers[\"user_email\"] = \"test.user@email.com\";\n//msg.payload = null;\nmsg.payload = msg.json;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1160,"y":1632,"wires":[["654b3607.207f58","d0d0c10f.06a5e"]],"info":"Use Bearer token from previous request in the headers to authenticate API request.\n\nNote: The bearer token gets retrieved from the payload of the previous authorization request: `msg.payload.access_token`\n"},{"id":"9b2ed519.2d98c8","type":"debug","z":"4e7052a1.c1757c","name":"Create user request result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1690,"y":1632,"wires":[]},{"id":"1ee4a1f0.7831be","type":"change","z":"4e7052a1.c1757c","g":"3bcf5104.61b80e","name":"Set request body","rules":[{"t":"set","p":"json","pt":"msg","to":"{\"participant\":\"5f36a7a970d9e4667019a477\",\"body\":\"WeSeeDo TEST: https://sandbox-direct.weseedo.nl/client.html?id=EOpegQkeeVRb8IGdKUcIruahc8flgCuu_3iQApmB1Lak2rDAk8Gw16X8yADi6RUxe\"}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":950,"y":1632,"wires":[["72018b70.a486b4"]]},{"id":"5eb84fb7.863af","type":"comment","z":"4e7052a1.c1757c","name":"Set request body","info":"1. Double-click the node `Set request body`\n2. Open the json and enter the `id` of the participant and the `hash` from the response of the `Create meeting` request.\n```\n{\n    \"participant\": \"THE_ID_OF_THE_PARTICIPANT\",\n    \"body\": \"WeSeeDo TEST: https://sandbox-direct.weseedo.nl/client.html?id=A_HASHED_TOKEN_FOR_THE_PARTICIPANT\"\n}\n```\n3. Click `Done`.\n4. Click on the `Trigger request` button to send the request.","x":941,"y":1570,"wires":[]},{"id":"d0d0c10f.06a5e","type":"debug","z":"4e7052a1.c1757c","name":"Prepare request result","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1380,"y":1718,"wires":[]},{"id":"25d3b6a.ea9b84a","type":"debug","z":"4e7052a1.c1757c","name":"Prepare request result","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1380,"y":1478,"wires":[]},{"id":"416dbb28.7ee244","type":"debug","z":"4e7052a1.c1757c","name":"Prepare request result","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1321,"y":1258,"wires":[]},{"id":"e521334c.3e03e","type":"debug","z":"4e7052a1.c1757c","name":"Prepare request result","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1532,"y":1038,"wires":[]},{"id":"747d1ba0.ef0684","type":"debug","z":"4e7052a1.c1757c","name":"Prepare request result","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1380,"y":838,"wires":[]},{"id":"464487ae.eb8b58","type":"debug","z":"4e7052a1.c1757c","name":"Prepare request result","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1169,"y":658,"wires":[]},{"id":"24e28448.479d9c","type":"comment","z":"4e7052a1.c1757c","name":"User ID","info":"1. Double-click the node `User ID`.\n2. Enter the ID of the user you want to update. \n3. Click `Done.`\n4. Click on the `Trigger request` button to send the request.","x":1131,"y":898,"wires":[]},{"id":"58269ff8.7bef5","type":"comment","z":"4e7052a1.c1757c","name":"User ID","info":"1. Double-click the node `User ID`.\n2. Enter the ID of the user you want to delete. \n3. Click `Done.`\n4. Click on the `Trigger request` button to send the request.","x":911,"y":1114,"wires":[]}]